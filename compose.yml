
services:
  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:${RELEASE:-latest}
    restart: always
#    labels:
#      traefik.enable: "true"
#      traefik.http.routers.rocketchat.rule: Host(`${DOMAIN:-}`)
#      traefik.http.routers.rocketchat.tls: "true"
#      traefik.http.routers.rocketchat.entrypoints: https
#      traefik.http.routers.rocketchat.tls.certresolver: le
#      traefik.http.services.rocketchat.loadbalancer.server.scheme: https
    environment:
      MONGO_URL: "${MONGO_URL:-\
        mongodb://${MONGODB_ADVERTISED_HOSTNAME:-mongodb}:${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}/\
        ${MONGODB_DATABASE:-rocketchat}?replicaSet=${MONGODB_REPLICA_SET_NAME:-rs0}}"
      MONGO_OPLOG_URL: "${MONGO_OPLOG_URL:\
        -mongodb://${MONGODB_ADVERTISED_HOSTNAME:-mongodb}:${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}/\
        local?replicaSet=${MONGODB_REPLICA_SET_NAME:-rs0}}"
      ROOT_URL: ${ROOT_URL:-http://localhost:${HOST_PORT:-3000}}
      PORT: ${PORT:-3000}
      DEPLOY_METHOD: docker
      DEPLOY_PLATFORM: ${DEPLOY_PLATFORM:-}
      REG_TOKEN: ${REG_TOKEN:-}
      INITIAL_USER: yes
      ADMIN_USERNAME: admin
      ADMIN_NAME: Admin
      ADMIN_EMAIL: rodriq@localhost.com
      ADMIN_PASS: P@55w0rd
      OVERWRITE_SETTING_Show_Setup_Wizard: completed
      MAIL_URL: smtp://smtp.email
    depends_on:
      - mongodb
    expose:
      - ${PORT:-3000}
    ports:
      - "${BIND_IP:-0.0.0.0}:${HOST_PORT:-3000}:${PORT:-3000}"

  mongodb:
    image: docker.io/bitnami/mongodb:${MONGODB_VERSION:-5.0}
    restart: always
    volumes:
      - mongodb_data:/opt/mongodb
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: ${MONGODB_REPLICA_SET_NAME:-rs0}
      MONGODB_PORT_NUMBER: ${MONGODB_PORT_NUMBER:-27017}
      MONGODB_INITIAL_PRIMARY_HOST: ${MONGODB_INITIAL_PRIMARY_HOST:-mongodb}
      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: ${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}
      MONGODB_ADVERTISED_HOSTNAME: ${MONGODB_ADVERTISED_HOSTNAME:-mongodb}
      MONGODB_ENABLE_JOURNAL: ${MONGODB_ENABLE_JOURNAL:-true}
      ALLOW_EMPTY_PASSWORD: ${ALLOW_EMPTY_PASSWORD:-yes}

  # netmap:
  #  image: markmanx/isoflow:latest
  #  restart: always
  #  ports:
  #    - 3001:3001
  #  environment:
  #    - VIRTUAL_HOST=netmap.badger.lan
  #  volumes:
  #    - isoflow_data:/opt/isoflow/data

  manager:
    image: portainer/portainer-ce:latest
    restart: always
    labels:
      traefik.enable: "true"
      traefik.http.routers.manager.rule: Host(`manager.badger.lan`)
      traefik.http.routers.manager.entryPoints: web
      traefik.http.services.manager.loadbalancer.server.port: 3002
    ports:
      - 3002:3002
    environment:
      - VIRTUAL_HOST=manager.badger.lan
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/opt/portainer

  e1:
    image: etherpad/etherpad:latest
    restart: always
    labels:
      traefik.enable: "true"
      traefik.http.routers.e1.rule: Host(`e1.badger.lan`)
      traefik.http.routers.e1.entryPoints: web
      traefik.http.services.e1.loadbalancer.server.port: 9001
    ports:
      - 9001:9001
    environment:
      - VIRTUAL_HOST=e1.badger.lan
    volumes:
      - e1_data:/opt/etherpad-lite/var

  e2:
    image: etherpad/etherpad:latest
    restart: always
    labels:
      traefik.enable: "true"
      traefik.http.routers.e2.rule: Host(`e2.badger.lan`)
      traefik.http.routers.e2.entryPoints: web
      traefik.http.services.e2.loadbalancer.server.port: 9002
    ports:
      - 9002:9002
    environment:
      - VIRTUAL_HOST=e2.badger.lan
    volumes:
      - e2_data:/opt/etherpad-lite/var

  e3:
    image: etherpad/etherpad:latest
    restart: always
    labels:
      traefik.enable: "true"
      traefik.http.routers.e3.rule: Host(`e1.badger.lan`)
      traefik.http.routers.e3.entryPoints: web
      traefik.http.services.e3.loadbalancer.server.port: 9003
    ports:
      - 9003:9003
    environment:
      - VIRTUAL_HOST=e3.badger.lan
    volumes:
      - e3_data:/opt/etherpad-lite/var

  support:
    image: etherpad/etherpad:latest
    restart: always
    labels:
      traefik.enable: "true"
      traefik.http.routers.support.rule: Host(`support.badger.lan`)
      traefik.http.routers.support.entryPoints: web
      traefik.http.services.support.loadbalancer.server.port: 9004
    ports:
      - 9004:9004
    environment:
      - VIRTUAL_HOST=support.badger.lan
    volumes:
      - support_data:/opt/etherpad-lite/var
        
#  nginx:
#    image: nginx:latest
#    restart: always
#    ports:
#      - 80:80
#    volumes:
#      - ./nginx/html:/usr/share/nginx/html
#      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  traefik:
    image: docker.io/traefik:${TRAEFIK_RELEASE:-v2.9.8}
    restart: always
    command:
     - --api.insecure=false
     - --providers.docker=true
     - --providers.docker.exposedbydefault=false
     - --entrypoints.web.address=:80
     - --entrypoints.web.http.redirections.entryPoint.to=https
     - --entrypoints.web.http.redirections.entryPoint.scheme=https
     - --entrypoints.https.address=:443
     - --certificatesresolvers.le.acme.tlschallenge=true
     - --certificatesresolvers.le.acme.email=${LETSENCRYPT_EMAIL?need email for cert expiry notifications}
     - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
    volumes:
      - traefik:/letsencrypt:rw
      - /run/docker.sock:/var/run/docker.sock:ro
volumes:
  e1_data:
    driver: local
  e2_data:
    driver: local
  e3_data:
    driver: local
  support_data:
    driver: local
  mongodb_data:
    driver: local
#  isoflow_data:
#    driver: local
  portainer_data:
    driver: local
  traefik: { driver: local }

    